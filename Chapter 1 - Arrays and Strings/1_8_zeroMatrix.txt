1 2 3 4
1 0 4 5 
4 5 6 7

1 0 3 4
0 0 0 0
4 0 6 7

1 0 3 4
0 0 0 0 
4 0 6 7

O(NM(N+M))

1 0 3 0
0 0 0 0
4 0 6 0

1 0 3 0
0 0 0 0
4 0 6 0

0 0 0 0
1 0 4 5 
4 5 6 7

O(NM) time O(1) memory

1 2 3 4
0 0 4 5 
4 5 6 0

0 0 3 0
0 0 0 0 
0 0 0 0

void checkZero(int **matrix, int m, int n){
	//lastPosition
	for(int i=1; i<max(m, n); i++){
		if(i<m){
			for(int j=0;j<n; j++){
				if(matrix[i][j]==0)
					matrix[i][0]=0;
			}
		}
		if(i<n){
			for(int j=0;j<m; j++){
				if(matrix[j][i]==0)
					matrix[0][j]=0;
			}
		}
	}

}

void putZero(int **matrix, int m, int n){
	//putZeros
	for(int i=1; i<max(m, n); i++){
		if(i<m){
			if(matrix[i][0]==0)
				for(int j=0;j<n; j++){
						matrix[i][j]=0;
				}
		}
		if(i<n){
			if(matrix[0][i]==0)
				for(int j=0;j<m; j++){
						matrix[j][i]=0;
				}
		}
	}
}

0 0 3 0
0 0 0 0 
0 0 0 0

yZ true
xZ false

void zeroMatrix(int **matrix, int m, int n){

	bool yZero=false, xZero=false;
	//zeroPosition
	for(int i=0;i<m; i++){
		if(matrix[i][0]==0)
			yZero=true;
	}

	for(int i=0;i<n; i++){
		if(matrix[0][i]==0)
			xZero=true;
	}

	checkZero();
	putZero();	

	//putZeroPosition
	if(yZero)
		for(int i=0;i<m; i++){
			matrix[i][0]=0;
		}
	if(xZero)
		for(int i=0;i<n; i++){
			matrix[0][i]=0;
		}
}